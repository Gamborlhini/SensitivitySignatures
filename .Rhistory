demo()
help()
install.packages("tinytex")
install.packages("rmarkdown")
install.packages("ggplot")
install.packages("ggplot2")
#read GDSC data from csv file
rawData <- read.csv(file = "data2.csv")
expressionData0 <- read.csv(file = "CellLineBasalExpression_0.csv")
expressionData1 <- read.csv(file = "CellLineBasalExpression_1.csv")
expressionData2 <- read.csv(file = "CellLineBasalExpression_2.csv")
expressionData3 <- read.csv(file = "CellLineBasalExpression_3.csv")
combinedEXP <- rbind(expressionData0, expressionData1, expressionData2, expressionData3)
#reformat so cell lines are rows and genes are columns
n <- combinedEXP$name
formattedEXP <- data.frame(t(combinedEXP[,-1]))
colnames(formattedEXP) <- n
#convert into dataframe
frame <- data.frame(rawData)
#display all headers
print(names(frame))
print(names(combinedEXP))
getwd()
setwd("C:/Users/Nikhil Subhas/Documents/GitHub/SensitivitySignatures")
#import dplyr for later use
library(dplyr)
#read GDSC data from csv file
rawData <- read.csv(file = "data2.csv")
expressionData0 <- read.csv(file = "CellLineBasalExpression_0.csv")
expressionData1 <- read.csv(file = "CellLineBasalExpression_1.csv")
expressionData2 <- read.csv(file = "CellLineBasalExpression_2.csv")
expressionData3 <- read.csv(file = "CellLineBasalExpression_3.csv")
combinedEXP <- rbind(expressionData0, expressionData1, expressionData2, expressionData3)
#reformat so cell lines are rows and genes are columns
n <- combinedEXP$name
formattedEXP <- data.frame(t(combinedEXP[,-1]))
colnames(formattedEXP) <- n
#convert into dataframe
frame <- data.frame(rawData)
#display all headers
#print(names(frame))
print(names(combinedEXP))
str(df.formattedEXP)
str(formattedEXP)
source("~/GitHub/SensitivitySignatures/SensitivitySigs.R")
n <- names(combinedEXP)
n
destroyX(combinedEXP)
destroyX = function(es) {
f = es
for (col in c(1:ncol(f))){ #for each column in dataframe
if (startsWith(colnames(f)[col], "x") == TRUE)  { #if starts with 'X' ..
colnames(f)[col] <- substr(colnames(f)[col], 2, 100) #get rid of it
}
}
assign(deparse(substitute(es)), f, inherits = TRUE) #assign corrected data to original name
}
destroyX(combinedEXP)
n <- names(combinedEXP)
n
names(combinedEXP)
newEXP <- destroyX(combinedEXP)
newEXP
paste("^x", allSens$COSMIC_ID[row], "$", sep = '')
paste("^x", allSens$COSMIC_ID[1], "$", sep = '')
grep(paste("^x", allSens$COSMIC_ID[1], "$", sep = ''), colnames(combinedEXP))
grep("^x906795$", colnames(combinedEXP))
grep("906795", colnames(combinedEXP))
combinedEXP$X906795
